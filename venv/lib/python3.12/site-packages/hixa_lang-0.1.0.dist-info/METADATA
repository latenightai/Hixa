Metadata-Version: 2.4
Name: hixa-lang
Version: 0.1.0
Summary: A modern, production-ready programming language implemented in Python
Author-email: Hixa Language Team <team@hixa-lang.org>
Maintainer-email: Hixa Language Team <team@hixa-lang.org>
License: MIT
Project-URL: Homepage, https://github.com/hixa-lang/hixa
Project-URL: Documentation, https://hixa-lang.readthedocs.io
Project-URL: Repository, https://github.com/hixa-lang/hixa
Project-URL: Bug Tracker, https://github.com/hixa-lang/hixa/issues
Keywords: programming-language,compiler,interpreter,language
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Software Development :: Compilers
Classifier: Topic :: Software Development :: Interpreters
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: click>=8.0.0
Requires-Dist: rich>=13.0.0
Requires-Dist: typing-extensions>=4.0.0
Provides-Extra: dev
Requires-Dist: pytest>=7.0.0; extra == "dev"
Requires-Dist: pytest-cov>=4.0.0; extra == "dev"
Requires-Dist: black>=23.0.0; extra == "dev"
Requires-Dist: isort>=5.0.0; extra == "dev"
Requires-Dist: flake8>=6.0.0; extra == "dev"
Requires-Dist: mypy>=1.0.0; extra == "dev"
Requires-Dist: pre-commit>=3.0.0; extra == "dev"
Dynamic: license-file

# Hixa Programming Language

A modern, production-ready programming language implemented in Python.

## Features

- **Clean Syntax**: Intuitive and readable syntax inspired by modern languages
- **Static Typing**: Optional static type checking for better code quality
- **Garbage Collection**: Automatic memory management
- **Standard Library**: Rich set of built-in functions and data structures
- **Package Management**: Built-in package system for code organization
- **Cross-platform**: Runs on Windows, macOS, and Linux

## Installation

```bash
pip install hixa-lang
```

## Quick Start

Create a file named `hello.hx`:

```hixa
fn main() {
    print("Hello, Hixa!")
    
    let name = "World"
    print("Hello, {name}!")
    
    let numbers = [1, 2, 3, 4, 5]
    let sum = numbers.reduce(0, |acc, x| acc + x)
    print("Sum: {sum}")
}
```

Run it:

```bash
hixa hello.hx
```

## Language Features

### Variables and Types

```hixa
let x = 42                    // Integer
let y = 3.14                  // Float
let name = "Hixa"             // String
let is_active = true          // Boolean
let numbers = [1, 2, 3]       // Array
let person = {                // Object
    name: "Alice",
    age: 30
}
```

### Functions

```hixa
fn add(a: int, b: int) -> int {
    return a + b
}

fn greet(name: str) {
    print("Hello, {name}!")
}

// Lambda functions
let multiply = |x, y| x * y
```

### Control Flow

```hixa
if x > 10 {
    print("x is greater than 10")
} else if x == 10 {
    print("x is exactly 10")
} else {
    print("x is less than 10")
}

for i in range(5) {
    print(i)
}

while condition {
    // loop body
}
```

### Classes and Objects

```hixa
class Person {
    let name: str
    let age: int
    
    fn new(name: str, age: int) -> Person {
        self.name = name
        self.age = age
    }
    
    fn greet() {
        print("Hello, I'm {self.name}")
    }
}

let alice = Person.new("Alice", 30)
alice.greet()
```

## Development

### Setup Development Environment

```bash
git clone https://github.com/hixa-lang/hixa.git
cd hixa
pip install -e ".[dev]"
```

### Running Tests

```bash
pytest
```

### Code Formatting

```bash
black src/
isort src/
```

### Type Checking

```bash
mypy src/
```

## Project Structure

```
hixa/
├── src/
│   └── hixa/
│       ├── __init__.py
│       ├── cli.py              # Command-line interface
│       ├── lexer.py            # Lexical analysis
│       ├── parser.py           # Syntax parsing
│       ├── ast.py              # Abstract syntax tree
│       ├── interpreter.py      # Code execution
│       ├── types.py            # Type system
│       ├── stdlib.py           # Standard library
│       └── utils.py            # Utilities
├── tests/                      # Test suite
├── examples/                   # Example programs
├── docs/                       # Documentation
├── pyproject.toml             # Project configuration
└── README.md                  # This file
```

## Contributing

We welcome contributions! Please see our [Contributing Guide](CONTRIBUTING.md) for details.

## License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.

## Roadmap

- [ ] Package manager
- [ ] WebAssembly compilation
- [ ] REPL improvements
- [ ] IDE support
- [ ] Performance optimizations
- [ ] Concurrency primitives
- [ ] Foreign function interface

## Community

- [Discussions](https://github.com/hixa-lang/hixa/discussions)
- [Issues](https://github.com/hixa-lang/hixa/issues)
- [Discord](https://discord.gg/hixa-lang) 
